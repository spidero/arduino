#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>
#include <WiFiClientSecureBearSSL.h>  
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

const char* ssid = "wifi-ap";
const char* password = "wifi-pass";
const String location = "Cisna";
const char* typeWeather = "weather_main";
const char* typeTemp = "temp"; 
const char* typeHum = "humidity"; 

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64

#define OLED_SDA 14
#define OLED_SCL 12

#define OLED_ADDR   0x3C

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

String weatherData;
String tempData;
String humData;

void setup() {
  Wire.begin(OLED_SDA, OLED_SCL);

  if(!display.begin(SSD1306_SWITCHCAPVCC, OLED_ADDR)) {
    Serial.println(F("SSD1306 allocation failed"));
    for(;;);
  }

  Serial.begin(115200);
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }

  Serial.println("Connected to WiFi");

}

void loop() {
  if (WiFi.status() == WL_CONNECTED) {
    std::unique_ptr<BearSSL::WiFiClientSecure> client(new BearSSL::WiFiClientSecure);
    client->setInsecure(); 

    getHttpData(client.get(), typeWeather, weatherData);
    getHttpData(client.get(), typeTemp, tempData);
    getHttpData(client.get(), typeHum, humData);

    Serial.println("Weather Data: ");
    Serial.println(weatherData);
    Serial.println("Temperature Data: ");
    Serial.println(tempData);
    Serial.println("Hummidity Data: ");
    Serial.println(humData);

} else {
    Serial.println("WiFi not connected");
  }

  display.clearDisplay();
  display.setTextColor(SSD1306_WHITE);
  display.setTextSize(2);
  display.setCursor(0, 0);

  char buffer[50];

  sprintf(buffer, "[%s]", location.c_str());
  display.println(buffer);
  sprintf(buffer, "Temp:%s", tempData.c_str());
  display.println(buffer);
  sprintf(buffer, "%s", weatherData.c_str());
  display.println(buffer);
  sprintf(buffer, "Hum: %s %%", humData.c_str());
  display.println(buffer);

  display.display();

  delay(60000); 
}

void getHttpData(WiFiClientSecure* client, const char* type, String& data) {
  HTTPClient http;

  String url = "https://wbieszczady.eu/rest/" + String(type) + "/" + String(location);
  //Serial.println("Requesting URL: " + url);
  http.begin(*client, url);

  int httpCode = http.GET(); // Wykonaj żądanie

  if (httpCode > 0) { // Sprawdź kod odpowiedzi
    data = http.getString(); 
    //Serial.println(httpCode);
    //Serial.println(data);
  } else {
    Serial.println("Error on HTTP request");
    data = "Error"; 
  }

  http.end(); 
}
